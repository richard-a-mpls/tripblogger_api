openapi: "3.0.2"
info:
  title: API Title
  version: "1.0"
servers:
  - url: http://localhost:8080/v1
paths:
  /authorize:
    description: "authorize based on identity token"
    post:
      tags:
        - "authorize"
      summary: "authorize a session for token"
      description: "authorize based on a centralized token"
      operationId: "authorize"
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AuthorizationRequest'
      responses:
        '200':
          description: OK
  /logout/:
    description: "log out of the API session"
    get:
      tags:
        - "logout"
      summary: "de-authorize a session for token"
      description: "de-authorize a session for token"
      operationId: "logout"
      parameters:
        - name: "apiToken"
          in: "query"
          description: "ID of profile to return"
          required: true
          schema:
            type: string
      responses:
        '200':
          description: OK
  /profile:
    description: "add a profile"
    post:
      tags:
        - "profile"
      summary: "create a profile"
      description: "create a profile"
      operationId: "addProfile"
      security:
        - BearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Profile'
      responses:
        '200':
          description: OK
  /profile/{profileId}:
    description: "profile operations"
    get:
      tags:
        - "profile"
      summary: "get a profile by id"
      description: "get that profile"
      operationId: "getProfile"
      security:
        - BearerAuth: []
      parameters:
        - name: "profileId"
          in: "path"
          description: "ID of profile to return"
          required: true
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Profile"
components:
  schemas:
    Profile:
      type: object
      required:
        - profile_name
        - identity_issuer
        - identity_id
      properties:
        profile_id:
          type: "string"
        profile_name:
          type: "string"
        identity_issuer:
          type: "string"
        identity_id:
          type: "string"
        connections:
          type: "array"
    AuthorizationRequest:
      type: object
      required:
        - identity_token
      properties:
        identity_token:
          type: "string"
    ApiSession:
      type: object
      properties:
        identity_token:
          type: "string"
        identity_issuer:
          type: "string"
        api_token:
          type: "string"
        api_token_expiration:
          type: "integer"
        user_profile:
          type: "string"
  securitySchemes:
    BearerAuth:
      type: http
      scheme: bearer
security:
  BearerAuth: []