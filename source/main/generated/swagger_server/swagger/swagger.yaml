openapi: 3.0.2
info:
  title: API Title
  version: "1.0"
servers:
- url: http://localhost:8080/v1
paths:
  /profile:
    description: add a profile
    get:
      tags:
      - profile
      summary: get a profile based on authorized session
      operationId: get_session_profile
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Profile'
      security:
      - BearerAuth: []
      x-openapi-router-controller: swagger_server.controllers.profile_controller
  /profile/{profileId}:
    description: profile operations
    get:
      tags:
      - profile
      summary: get a profile by id
      description: get that profile
      operationId: get_profile
      parameters:
      - name: profileId
        in: path
        description: ID of profile to return
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Profile'
      security:
      - BearerAuth: []
      x-openapi-router-controller: swagger_server.controllers.profile_controller
    patch:
      tags:
      - profile
      summary: update attributes of a profile
      operationId: patch_profile
      parameters:
      - name: profileId
        in: path
        description: ID of profile to return
        required: true
        style: simple
        explode: false
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Profile'
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Profile'
      security:
      - BearerAuth: []
      x-openapi-router-controller: swagger_server.controllers.profile_controller
  /public/projects:
    description: published project related calls
    get:
      tags:
      - published_project
      summary: get published projects
      operationId: get_public_projects
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Project'
                x-content-type: application/json
      security:
      - OptionalBearerAuth: []
      x-openapi-router-controller: swagger_server.controllers.published_project_controller
  /connections/projects:
    description: published project related calls
    get:
      tags:
      - published_project
      summary: get published projects
      operationId: get_connection_projects
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Project'
                x-content-type: application/json
      security:
      - BearerAuth: []
      x-openapi-router-controller: swagger_server.controllers.published_project_controller
  /me/projects:
    description: project related calls
    get:
      tags:
      - project
      summary: get a project based on authorized session
      operationId: get_session_projects
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Project'
                x-content-type: application/json
      security:
      - BearerAuth: []
      x-openapi-router-controller: swagger_server.controllers.project_controller
    post:
      tags:
      - project
      summary: create a project
      description: create a project
      operationId: add_project
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Project'
        required: true
      responses:
        "200":
          description: OK
      security:
      - BearerAuth: []
      x-openapi-router-controller: swagger_server.controllers.project_controller
  /me/projects/{project_id}/photos:
    description: add photos to a project
    post:
      tags:
      - project_photo
      summary: upload a photo to your project.
      description: upload a photo to your project
      operationId: add_project_photo
      parameters:
      - name: project_id
        in: path
        description: ID of project to delete
        required: true
        style: simple
        explode: false
        schema:
          type: string
      requestBody:
        content:
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/project_id_photos_body'
      responses:
        "200":
          description: OK
      security:
      - BearerAuth: []
      x-openapi-router-controller: swagger_server.controllers.project_photo_controller
  /me/projects/{project_id}:
    description: project operations for an individual session
    delete:
      tags:
      - project
      summary: delete a project by id
      description: delete that project
      operationId: delete_project
      parameters:
      - name: project_id
        in: path
        description: ID of project to delete
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "200":
          description: OK
      security:
      - BearerAuth: []
      x-openapi-router-controller: swagger_server.controllers.project_controller
    patch:
      tags:
      - project
      summary: update attributes of a project
      operationId: patch_project
      parameters:
      - name: project_id
        in: path
        description: ID of project to patch
        required: true
        style: simple
        explode: false
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Project'
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Project'
      security:
      - BearerAuth: []
      x-openapi-router-controller: swagger_server.controllers.project_controller
  /projects/{project_id}/profile:
    description: project public profile
    get:
      tags:
      - project
      summary: get a project owners public profile
      description: get a project owners public profile
      operationId: get_project_profile
      parameters:
      - name: project_id
        in: path
        description: ID of the project to lookup
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PublicProfile'
      security:
      - BearerAuth: []
      x-openapi-router-controller: swagger_server.controllers.project_controller
  /projects/{project_id}:
    description: project operations
    get:
      tags:
      - project
      summary: get a project by id
      description: get that project
      operationId: get_project
      parameters:
      - name: project_id
        in: path
        description: ID of project to return
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Project'
      security:
      - BearerAuth: []
      x-openapi-router-controller: swagger_server.controllers.project_controller
  /photos/{photo_id}:
    description: photo operations
    get:
      tags:
      - photo
      summary: get a photo
      operationId: get_photo
      parameters:
      - name: photo_id
        in: path
        description: ID of the photo to return
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "200":
          description: OK
      x-openapi-router-controller: swagger_server.controllers.photo_controller
  /photos:
    description: photo post operations
    post:
      tags:
      - photo
      summary: upload a photo
      description: upload a photo
      operationId: add_photo
      requestBody:
        content:
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/photos_body'
      responses:
        "200":
          description: OK
      security:
      - BearerAuth: []
      x-openapi-router-controller: swagger_server.controllers.photo_controller
components:
  schemas:
    PublicProfile:
      type: object
      properties:
        profile_name:
          type: string
        profile_img:
          type: string
      example:
        profile_name: profile_name
        profile_img: profile_img
    Profile:
      type: object
      properties:
        _id:
          type: string
        profile_name:
          type: string
        identity_issuer:
          type: string
        identity_id:
          type: string
        profile_img:
          type: string
        connections:
          type: array
          items:
            type: string
      example:
        profile_name: profile_name
        profile_img: profile_img
        identity_id: identity_id
        identity_issuer: identity_issuer
        _id: _id
        connections:
        - connections
        - connections
    Project:
      type: object
      properties:
        _id:
          type: string
        profile_id:
          type: string
        summary:
          type: string
        description:
          type: string
        location:
          type: string
        published:
          type: boolean
        showcase_photo_id:
          type: string
        photo_array:
          type: array
          items:
            type: string
        datestmp:
          type: string
        share_with:
          type: string
          enum:
          - private
          - public
          - connections
        project_days:
          type: array
          items:
            $ref: '#/components/schemas/ProjectDay'
      example:
        summary: summary
        project_days:
        - summary: summary
          description: description
          location: location
          id: id
          datestmp: datestmp
          photos:
          - photos
          - photos
        - summary: summary
          description: description
          location: location
          id: id
          datestmp: datestmp
          photos:
          - photos
          - photos
        showcase_photo_id: showcase_photo_id
        profile_id: profile_id
        description: description
        photo_array:
        - photo_array
        - photo_array
        share_with: private
        location: location
        _id: _id
        published: true
        datestmp: datestmp
    ProjectDay:
      type: object
      properties:
        id:
          type: string
        summary:
          type: string
        description:
          type: string
        location:
          type: string
        datestmp:
          type: string
        photos:
          type: array
          items:
            type: string
      example:
        summary: summary
        description: description
        location: location
        id: id
        datestmp: datestmp
        photos:
        - photos
        - photos
    Photo:
      type: object
      properties:
        _id:
          type: string
        summary:
          type: string
        name:
          type: string
        type:
          type: string
        data:
          type: string
          format: binary
    project_id_photos_body:
      type: object
      properties:
        fileName:
          type: string
          format: binary
    photos_body:
      type: object
      properties:
        orderId:
          type: integer
        userId:
          type: integer
        fileName:
          type: string
          format: binary
  securitySchemes:
    BearerAuth:
      type: http
      scheme: bearer
      x-bearerInfoFunc: swagger_server.controllers.authorization_controller.check_BearerAuth
    OptionalBearerAuth:
      type: http
      scheme: bearer
      x-bearerInfoFunc: swagger_server.controllers.authorization_controller.check_OptionalBearerAuth

