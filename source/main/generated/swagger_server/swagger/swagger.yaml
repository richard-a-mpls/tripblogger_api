openapi: 3.0.2
info:
  title: API Title
  version: "1.0"
servers:
- url: http://localhost:8080/v1
security:
- BearerAuth: []
paths:
  /authorize:
    description: authorize based on identity token
    post:
      tags:
      - authorize
      summary: authorize a session for token
      description: authorize based on a centralized token
      operationId: authorize
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AuthorizationRequest'
        required: true
      responses:
        "200":
          description: OK
      x-openapi-router-controller: swagger_server.controllers.authorize_controller
  /logout/:
    description: log out of the API session
    get:
      tags:
      - logout
      summary: de-authorize a session for token
      description: de-authorize a session for token
      operationId: logout
      parameters:
      - name: apiToken
        in: query
        description: ID of profile to return
        required: true
        style: form
        explode: true
        schema:
          type: string
      responses:
        "200":
          description: OK
      x-openapi-router-controller: swagger_server.controllers.logout_controller
  /profile:
    description: add a profile
    get:
      tags:
      - profile
      summary: get a profile based on authorized session
      operationId: get_session_profile
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Profile'
      security:
      - BearerAuth: []
      x-openapi-router-controller: swagger_server.controllers.profile_controller
    post:
      tags:
      - profile
      summary: create a profile
      description: create a profile
      operationId: add_profile
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Profile'
        required: true
      responses:
        "200":
          description: OK
      security:
      - BearerAuth: []
      x-openapi-router-controller: swagger_server.controllers.profile_controller
  /profile/{profileId}:
    description: profile operations
    get:
      tags:
      - profile
      summary: get a profile by id
      description: get that profile
      operationId: get_profile
      parameters:
      - name: profileId
        in: path
        description: ID of profile to return
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Profile'
      security:
      - BearerAuth: []
      x-openapi-router-controller: swagger_server.controllers.profile_controller
components:
  schemas:
    Profile:
      required:
      - identity_id
      - identity_issuer
      - profile_name
      type: object
      properties:
        profile_id:
          type: string
        profile_name:
          type: string
        identity_issuer:
          type: string
        identity_id:
          type: string
        connections:
          type: array
          items:
            type: string
      example:
        profile_name: profile_name
        identity_id: identity_id
        profile_id: profile_id
        identity_issuer: identity_issuer
        connections:
        - connections
        - connections
    AuthorizationRequest:
      required:
      - identity_token
      type: object
      properties:
        identity_token:
          type: string
    ApiSession:
      type: object
      properties:
        identity_token:
          type: string
        identity_issuer:
          type: string
        api_token:
          type: string
        api_token_expiration:
          type: integer
        user_profile:
          type: string
  securitySchemes:
    BearerAuth:
      type: http
      scheme: bearer
      x-bearerInfoFunc: swagger_server.controllers.authorization_controller.check_BearerAuth

