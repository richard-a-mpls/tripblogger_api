openapi: "3.0.2"
info:
  title: API Title
  version: "1.0"
servers:
  - url: http://localhost:8080/v1
paths:
  /profile:
    description: "add a profile"
    get:
      tags:
        - "profile"
      summary: "get a profile based on authorized session"
      operationId: "getSessionProfile"
      security:
        - BearerAuth: []
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Profile"
  /profile/{profileId}:
    description: "profile operations"
    get:
      tags:
        - "profile"
      summary: "get a profile by id"
      description: "get that profile"
      operationId: "getProfile"
      security:
        - BearerAuth: []
      parameters:
        - name: "profileId"
          in: "path"
          description: "ID of profile to return"
          required: true
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Profile"
    patch:
      tags:
        - "profile"
      summary: "update attributes of a profile"
      operationId: "patchProfile"
      security:
        - BearerAuth: []
      parameters:
        - name: "profileId"
          in: "path"
          description: "ID of profile to return"
          required: true
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Profile'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Profile"

  /me/projects/{project_id}/photos:
    description: "add photos to a project"
    post:
      tags:
        - "project_photo"
      summary: "upload a photo to your project."
      description: "upload a photo to your project"
      operationId: "addProjectPhoto"
      security:
        - BearerAuth: [ ]
      parameters:
        - name: "project_id"
          in: "path"
          description: "ID of project to delete"
          required: true
          schema:
            type: string
      requestBody:
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                fileName:
                  type: string
                  format: binary
      responses:
        '200':
          description: OK

  /projects/{project_id}/profile:
    description: "project public profile"
    get:
      tags:
        - "project"
      summary: "get a project owners public profile"
      description: "get a project owners public profile"
      operationId: "getProjectProfile"
      security:
        - BearerAuth: [ ]
      parameters:
        - name: "project_id"
          in: "path"
          description: "ID of the project to lookup"
          required: true
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/PublicProfile"

  /photos/{photo_id}:
    description: "photo operations"
    get:
      tags:
        - "photo"
      summary: "get a photo"
      operationId: "getPhoto"
      parameters:
        - name: "photo_id"
          in: "path"
          description: "ID of the photo to return"
          required: true
          schema:
            type: string
      responses:
        '200':
          description: OK
  /photos:
    description: photo post operations
    post:
      tags:
        - "photo"
      summary: "upload a photo"
      description: "upload a photo"
      operationId: "addPhoto"
      security:
        - BearerAuth: [ ]
      requestBody:
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                orderId:
                  type: integer
                userId:
                  type: integer
                fileName:
                  type: string
                  format: binary
      responses:
        '200':
          description: OK
  /wakeup:
    description: wake up the service
    get:
      tags:
        - "wakeup"
      summary: "wakeup the service"
      description: "this service needs to be woken up periodically to start running"
      operationId: "wakeup"
      responses:
        '200':
          description: OK

components:
  schemas:
    PublicProfile:
      type: object
      properties:
        profile_name:
          type: string
        profile_img:
          type: string

    Profile:
      type: object
      properties:
        _id:
          type: "string"
        profile_name:
          type: "string"
        identity_issuer:
          type: "string"
        identity_id:
          type: "string"
        profile_img:
          type: "string"
        connections:
          type: "array"
          items:
            type: "string"

    Photo:
      type: object
      properties:
        _id:
          type: "string"
        summary:
          type: "string"
        name:
          type: "string"
        type:
          type: "string"
        data:
          type: "string"
          format: binary

  securitySchemes:
    BearerAuth:
      type: http
      scheme: bearer
security: